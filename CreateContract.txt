string CreateContract(string name, string vendor, string address, string project, string contract_start_date, string contract_end_date, string contract_age, string contract_amount, string first, string second, string second_codition, string final, string gurante, string court, string receving, string registration_number, string email, string phone, map scops)
{
	/*
		create contract عقد مقاولات عامة
	*/
fetchName = name.lower().replaceAll("-"," ");
fetchName = fetchName.replaceAll(" ","-");
// to see if there is an exist contractor or not
existingCounterpartyResponse = invokeurl
[
	url :"https://contracts.zoho.com/api/v1/counterparties/" + fetchName
	type :GET
	connection:"zcontract"
];
existingCounterparties = existingCounterpartyResponse.getJSON("counterparties");
info existingCounterpartyResponse;

// if this is a first time to create this contractor
if(isNull(existingCounterparties))
{
	// create a contracto in zoho contract
	counterpartyType = "customer";
	info "name:" + name;
	newCounterpartyDetail = {"name":name.toLowerCase(),"counterPartyType":toLowerCase(counterpartyType)};
	createdCounterpartyResponse = invokeurl
	[
		url :"https://contracts.zoho.com/api/v1/counterparties"
		type :POST
		parameters:toString(newCounterpartyDetail)
		connection:"zcontract"
	];
	info createdCounterpartyResponse;
	createdCounterPartyAPIName = createdCounterpartyResponse.get("counterparties").get(0).get("organizationApiName");
}
else
{
	// get the contractor api if is already exist
	createdCounterPartyAPIName = existingCounterpartyResponse.get("counterparties").get(0).get("organizationApiName");
}
createdContractInfo = Map();
//-------------------	New Contract Variables	----------------------------//
newContractType = "عقد-مقاولات-عامة";
isNewContractTermIsDefinite = false;
isNewContractRenewable = false;
newContractName = project + " with " + name;
dayAPI = "fs34w0rwk1m5";
day = zoho.currentdate.toString("EEEE");
dateAPI = "jcdfo1v3ibf3";
date = zoho.currentdate;
vendorAPI = "qwa6fwxvx25f";
vendor = vendor;
addressAPI = "dpady6jamv0e";
address = address.replaceAll("\n"," ");
projectAPI = "kfh3khl2kzts";
project = project;
contract_age = contract_start_date.toDate().daysBetween(contract_end_date.toDate());
contract_start_date_API = "im11nriamddb";
contract_start_date = contract_start_date.toDate().toString("yyyy-MMMM-dd");
info contract_start_date;
contract_end_date_API = "v3j4yzst4ub4";
contract_end_date = contract_end_date.toDate().toString("yyyy-MMMM-dd");
info contract_end_date;
contract_age_API = "8swu9ovhdreb";
info contract_age;
contract_amount_API = "39tiz8clf28m";
contract_amount = contract_amount;
first_API = "z0b4t6jxd6zp";
first = first;
second_API = "h07nytn6tj56";
second = second;
second_codition_API = "m3u16bq68bft";
second_codition = second_codition;
final_API = "dxb04fo20v63";
final = final;
gurante_API = "shve1nxgdcxj";
gurante = gurante;
court_API = "4inxhkvqz0r5";
court = court;
receving_API = "srferh7ojzl4";
receving = receving;
registration_number_API = "i9kc6slufatp";
phone_API = "xj8mnfkwylot";
email_API = "i0ja0m5tesff";
scope_1_API = "pito8lo75g8c";
scope_1 = scops.get("scope_1");
scope_2_API = "660wk09en0sd";
scope_2 = scops.get("scope_2");
scope_3_API = "88mcpx1p8rb2";
scope_3 = scops.get("scope_3");
scope_4_API = "maapl5yvzsvv";
scope_4 = scops.get("scope_4");
scope_5_API = "ggm5x0vrx80j";
scope_5 = scops.get("scope_5");
scope_6_API = "mukbmuujlb7z";
scope_6 = scops.get("scope_6");
scope_7_API = "4b3dtwtrc2gy";
scope_7 = scops.get("scope_7");
scope_8_API = "ff0aula4ssok";
scope_8 = scops.get("scope_8");
//------------------- New Contract JSON Input ----------------------------//
newContractDetail = {"externalSource":true,"inputfields":{{"metaApiName":"contract-type","inputs":{{"inputApiName":"contract-type","inputValue":newContractType}}},{"metaApiName":"contract-term","inputs":{{"inputApiName":"contract-term","inputValue":"false"}}},{"metaApiName":"is-renewable","inputs":{{"inputApiName":"is-renewable","inputValue":isNewContractRenewable}}},{"metaApiName":"title","inputs":{{"inputApiName":"title","inputValue":newContractName}}},{"metaApiName":"contract-effective-date","inputs":{{"inputApiName":"contract-effective-date","inputValue":1}}},{"metaApiName":"party-b-name","inputs":{{"inputApiName":"party-b-name","inputValue":createdCounterPartyAPIName}}},{"metaApiName":addressAPI,"inputs":{{"inputApiName":addressAPI,"inputValue":address}}},{"metaApiName":dayAPI,"inputs":{{"inputApiName":dayAPI,"inputValue":day}}},{"metaApiName":dateAPI,"inputs":{{"inputApiName":dateAPI,"inputValue":date}}},{"metaApiName":vendorAPI,"inputs":{{"inputApiName":vendorAPI,"inputValue":vendor}}},{"metaApiName":projectAPI,"inputs":{{"inputApiName":projectAPI,"inputValue":project}}},{"metaApiName":contract_start_date_API,"inputs":{{"inputApiName":contract_start_date_API,"inputValue":contract_start_date}}},{"metaApiName":contract_end_date_API,"inputs":{{"inputApiName":contract_end_date_API,"inputValue":contract_end_date}}},{"metaApiName":contract_age_API,"inputs":{{"inputApiName":contract_age_API,"inputValue":contract_age}}},{"metaApiName":contract_amount_API,"inputs":{{"inputApiName":contract_amount_API,"inputValue":contract_amount}}},{"metaApiName":first_API,"inputs":{{"inputApiName":first_API,"inputValue":first}}},{"metaApiName":second_API,"inputs":{{"inputApiName":second_API,"inputValue":second}}},{"metaApiName":second_codition_API,"inputs":{{"inputApiName":second_codition_API,"inputValue":second_codition}}},{"metaApiName":final_API,"inputs":{{"inputApiName":final_API,"inputValue":final}}},{"metaApiName":gurante_API,"inputs":{{"inputApiName":gurante_API,"inputValue":gurante}}},{"metaApiName":court_API,"inputs":{{"inputApiName":court_API,"inputValue":court}}},{"metaApiName":receving_API,"inputs":{{"inputApiName":receving_API,"inputValue":receving}}},{"metaApiName":registration_number_API,"inputs":{{"inputApiName":registration_number_API,"inputValue":registration_number}}},{"metaApiName":phone_API,"inputs":{{"inputApiName":phone_API,"inputValue":phone}}},{"metaApiName":email_API,"inputs":{{"inputApiName":email_API,"inputValue":email}}},{"metaApiName":scope_1_API,"inputs":{{"inputApiName":scope_1_API,"inputValue":scope_1}}},{"metaApiName":scope_2_API,"inputs":{{"inputApiName":scope_2_API,"inputValue":scope_2}}},{"metaApiName":scope_3_API,"inputs":{{"inputApiName":scope_3_API,"inputValue":scope_3}}},{"metaApiName":scope_4_API,"inputs":{{"inputApiName":scope_4_API,"inputValue":scope_4}}},{"metaApiName":scope_5_API,"inputs":{{"inputApiName":scope_5_API,"inputValue":scope_5}}},{"metaApiName":scope_6_API,"inputs":{{"inputApiName":scope_6_API,"inputValue":scope_6}}},{"metaApiName":scope_7_API,"inputs":{{"inputApiName":scope_7_API,"inputValue":scope_7}}},{"metaApiName":scope_8_API,"inputs":{{"inputApiName":scope_8_API,"inputValue":scope_8}}}}};

// create contract
createdContractInfo = invokeurl
[
	url :"https://contracts.zoho.com/api/v1/createcontract"
	type :POST
	parameters:toString(newContractDetail)
	connection:"zcontract"
];
info createdContractInfo;
return createdContractInfo.get("contracts").get(0).get("downloadUrl");
}